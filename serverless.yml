org: kawaym
app: webscraper-ecommerce
service: webscraper-ecommerce
frameworkVersion: '3'

resources:
  Resources:
    BestsellingProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: eventId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: eventId
            KeyType: HASH
        TableName: ${self:service}-bestsellingProductsTable-${sls:stage}

custom:
  esbuild:
    external:
      - 'aws-sdk'
      - '@sparticuz/chromium'
      - 'puppeteer-core'
    exclude: []
  serverless-dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    DYNAMODB_BESTSELLINGPRODUCTS_TABLE: ${self:service}-bestsellingProductsTable-${sls:stage}
    STAGE: ${sls:stage}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-bestsellingProductsTable-${sls:stage}

functions:
  healthCheck:
    handler: ./src/functions/health.health
    events:
      - httpApi:
          method: get
          path: /health
  allBestsellers:
    handler: ./src/functions/bestsellers.allBestsellers
    events:
      - httpApi:
          method: get
          path: /bestsellers/all
  bestsellers:
    handler: ./src/functions/bestsellers.bestsellers
    events:
      - httpApi:
          method: get
          path: /bestsellers
  events:
    handler: ./src/functions/events.readEvent
    events:
      - httpApi:
          method: get
          path: /events/{id}

plugins:
  - serverless-esbuild
  - serverless-dynamodb
  - serverless-offline

package:
  excludeDevDependencies: true
